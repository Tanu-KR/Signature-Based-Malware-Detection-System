from flask import Flask, request, render_template
from pymongo import MongoClient
import os

app = Flask(__name__)

# Connect to MongoDB
client = MongoClient('mongodb://localhost:27017/')
db = client['signaturesDB']
signatures_collection = db['signatures']

# Function to get signatures from MongoDB
def get_signatures():
    return list(signatures_collection.find({}, {'_id': 0, 'signature': 1, 'malware_name': 1}))

# Function to scan file for malware signatures
def scan_file(file_path, signatures):
    with open(file_path, 'rb') as file:
        file_content = file.read()
        for signature in signatures:
            if signature['signature'].encode() in file_content:
                return signature['malware_name']
    return None

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/scan', methods=['POST'])
def scan():
    uploaded_file = request.files['file']
    file_path = f'uploads/{uploaded_file.filename}'
    
    # Save the uploaded file
    uploaded_file.save(file_path)
    
    # Get signatures from the database
    signatures = get_signatures()
    
    # Scan the uploaded file
    malware_detected = scan_file(file_path, signatures)
    
    # Render the result template with the detection result
    return render_template('result.html', malware=malware_detected)

@app.route('/result')
def result():
    # This route seems unnecessary as it's handled in the scan function
    # You can remove this if you are only using the scan route for results
    return render_template('result.html', malware=None)

if __name__ == "__main__":
    if not os.path.exists('uploads'):
        os.makedirs('uploads')
    app.run(debug=True)
